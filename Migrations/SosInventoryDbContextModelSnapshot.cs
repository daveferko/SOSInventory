// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SOSInventory.Data;

#nullable disable

namespace SOSInventory.Migrations
{
    [DbContext(typeof(SosInventoryDbContext))]
    partial class SosInventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SOSInventory.Models.Adjustment", b =>
                {
                    b.Property<int>("AdjustmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdjustmentId"));

                    b.Property<string>("AdjustmentReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityAdjusted")
                        .HasColumnType("int");

                    b.HasKey("AdjustmentId");

                    b.HasIndex("ItemId");

                    b.ToTable("Adjustments");
                });

            modelBuilder.Entity("SOSInventory.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SOSInventory.Models.ItemReceipt", b =>
                {
                    b.Property<int>("ItemReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemReceiptId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityReceived")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemReceiptId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemReceipts");
                });

            modelBuilder.Entity("SOSInventory.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityShipped")
                        .HasColumnType("int");

                    b.Property<string>("ShipmentRefNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipmentId");

                    b.HasIndex("ItemId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("SOSInventory.Models.Adjustment", b =>
                {
                    b.HasOne("SOSInventory.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SOSInventory.Models.ItemReceipt", b =>
                {
                    b.HasOne("SOSInventory.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SOSInventory.Models.Shipment", b =>
                {
                    b.HasOne("SOSInventory.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
